{"code":"import JSBI from 'jsbi';\r\nimport { SolidityType } from '../constants';\r\nimport { validateSolidityTypeInstance } from '../utils';\r\n/**\r\n * A currency is any fungible financial instrument on Ethereum, including Ether and all ERC20 tokens.\r\n *\r\n * The only instance of the base class `Currency` is Ether.\r\n */\r\nexport class Currency {\r\n    /**\r\n     * Constructs an instance of the base class `Currency`. There is no instance of the base class 'Currency'\r\n     * @param decimals decimals of the currency\r\n     * @param symbol symbol of the currency\r\n     * @param name of the currency\r\n     */\r\n    constructor(decimals, symbol, name) {\r\n        validateSolidityTypeInstance(JSBI.BigInt(decimals), SolidityType.uint8);\r\n        this.decimals = decimals;\r\n        this.symbol = symbol;\r\n        this.name = name;\r\n    }\r\n}\r\nexport class nativeCurrency extends Currency {\r\n    changeNameAndSymbol(newName, newSymbol) {\r\n        this.name = newName;\r\n        this.symbol = newSymbol;\r\n    }\r\n}\r\n/**\r\n * The only instance of the base class `nativeCurrency`.\r\n */\r\nnativeCurrency.ETHER = new nativeCurrency(18, 'ETH', 'Ether');\r\nconst ETHER = nativeCurrency.ETHER;\r\nexport { ETHER };\r\n//# sourceMappingURL=currency.js.map","references":["D:/Projects/Dex/weswap-sdk/node_modules/jsbi/jsbi.d.ts","D:/Projects/Dex/weswap-sdk/src/constants.ts","D:/Projects/Dex/weswap-sdk/src/utils.ts"],"map":"{\"version\":3,\"file\":\"currency.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/entities/currency.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,IAAI,MAAM,MAAM,CAAA;AAEvB,OAAO,EAAE,YAAY,EAAE,MAAM,cAAc,CAAA;AAC3C,OAAO,EAAE,4BAA4B,EAAE,MAAM,UAAU,CAAA;AAEvD;;;;GAIG;AACH,MAAM,OAAO,QAAQ;IAKnB;;;;;OAKG;IACH,YAAsB,QAAgB,EAAE,MAAe,EAAE,IAAa;QACpE,4BAA4B,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,YAAY,CAAC,KAAK,CAAC,CAAA;QAEvE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;IAClB,CAAC;CACF;AAED,MAAM,OAAO,cAAe,SAAQ,QAAQ;IAInC,mBAAmB,CAAC,OAAe,EAAE,SAAiB;QAC3D,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;IAC1B,CAAC;;AAED;;GAEG;AACoB,oBAAK,GAAmB,IAAI,cAAc,CAAC,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;AAGvF,MAAM,KAAK,GAAG,cAAc,CAAC,KAAK,CAAA;AAClC,OAAO,EAAE,KAAK,EAAE,CAAA\"}","dts":{"name":"D:/Projects/Dex/weswap-sdk/src/entities/currency.d.ts","writeByteOrderMark":false,"text":"/**\r\n * A currency is any fungible financial instrument on Ethereum, including Ether and all ERC20 tokens.\r\n *\r\n * The only instance of the base class `Currency` is Ether.\r\n */\r\nexport declare class Currency {\r\n    readonly decimals: number;\r\n    readonly symbol?: string;\r\n    readonly name?: string;\r\n    /**\r\n     * Constructs an instance of the base class `Currency`. There is no instance of the base class 'Currency'\r\n     * @param decimals decimals of the currency\r\n     * @param symbol symbol of the currency\r\n     * @param name of the currency\r\n     */\r\n    protected constructor(decimals: number, symbol?: string, name?: string);\r\n}\r\nexport declare class nativeCurrency extends Currency {\r\n    symbol?: string;\r\n    name?: string;\r\n    changeNameAndSymbol(newName: string, newSymbol: string): void;\r\n    /**\r\n     * The only instance of the base class `nativeCurrency`.\r\n     */\r\n    static readonly ETHER: nativeCurrency;\r\n}\r\ndeclare const ETHER: nativeCurrency;\r\nexport { ETHER };\r\n"}}
